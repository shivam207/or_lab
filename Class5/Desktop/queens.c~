
#include <stdio.h>

void Solution(int board[8][8], int n)
{
  int i,j;
    for (i = 0; i < n; i++)
    {
        for (j = 0; j < n; j++)
            printf(" %d ", board[i][j]);
        printf("\n");
    }
}
 

int Safe(int board[8][8], int row, int col)
{
    int i, j;
 
    for (i = 0; i < col; i++)
        if (board[row][i]==1)
            return 0;
 
    for (i=row, j=col; i>=0 && j>=0; i--, j--)
        if (board[i][j]==1)
            return 0;
 
    for (i=row, j=col; j>=0 && i<8; i++, j--)
        if (board[i][j]==1)
            return 0;
 
    return 1;
}
 
int Solve(int board[8][8], int n, int col)
{
  
    if (col >= n)
        return 1;
 
    int i;
    for (i = 0; i < n; i++)
    {
       
        if ( Safe(board, i, col) )
        {
           
            board[i][col] = 1;
 
            if ( Solve(board, n, col + 1) )
                return 1;

            board[i][col] = 0;
        }
    }
 
    return 0;
}
 
int SolveQueen(int n)
{
    int board[n][n], i, j;  

    for(i=0; i<n; i++)  
    {
      for(j=0; j<n; j++)
      board[i][j]=0;
    }
 
    if ( Solve(board, n, 0) == 0 )
    {
      printf("Solution does not exist");
      return 0;
    }
 
    Solution(board, n);
    return 1;
}
int main()
{
  int n;
  scanf("%d",&n);

    SolveQueen(n);
    return 0;
}