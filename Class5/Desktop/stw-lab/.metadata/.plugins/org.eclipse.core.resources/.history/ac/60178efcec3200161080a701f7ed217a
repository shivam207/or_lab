package lab11;

import java.util.Iterator;
import java.util.Scanner;

import org.jgrapht.UndirectedGraph;
import org.jgrapht.graph.DefaultEdge;
import org.jgrapht.graph.SimpleGraph;
import org.jgrapht.traverse.DepthFirstIterator;

public class Section1_1 { public static void main(String [] args)

{
	Scanner input = new Scanner(System.in);
UndirectedGraph<Integer, DefaultEdge>
aGraph = new SimpleGraph<Integer, DefaultEdge>(DefaultEdge.class);
System.out.println("Enter number of vertices");
int n=input.nextInt();
for(int i=1;i<=n;i++){
	 aGraph.addVertex(i);}

String ch;
System.out.println("do you want to enter edges (y/n for yes or no respectively)");
ch=input.next();
if(ch=="y"){
	do{
		int i ,j;
		System.out.println("enter vertices");
		i=input.nextInt();
		j=input.nextInt();
		if(i!=j) aGraph.addEdge(i,j);
		System.out.println("do you want to enter edges (y/n for yes or no respectively)");
		 }while(ch=="y");
}
	Iterator<Integer> iter = new DepthFirstIterator<Integer, DefaultEdge>(aGraph);
		  

		  
 while (iter.hasNext()) {

	   int vertex = iter.next();

	   System.out.println( "Vertex " + vertex + " is connected to: " + aGraph.edgesOf(vertex));

	  

	 

	  
 }

 }

 }



